<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>开心博客</title>
  <subtitle>不停止的脚步,不服输的心!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-13T11:57:40.738Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>刘欢欢</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于NodeJS</title>
    <link href="http://yoursite.com/2016/05/13/%E5%85%B3%E4%BA%8ENodeJS/"/>
    <id>http://yoursite.com/2016/05/13/关于NodeJS/</id>
    <published>2016-05-13T11:52:26.000Z</published>
    <updated>2017-03-13T11:57:40.738Z</updated>
    
    <content type="html"><![CDATA[<p>学习资源推荐</p>
<pre><code>网站:国内NodeJS开发者社区：https://cnodejs.org/

书籍:《深入浅出Node.js》：作者：阿里巴巴.朴灵

阿里开源论坛:http://code.taobao.org/

360下面的:https://75team.com/

http://stackoverflow.com/ 全世界最牛的程序员问
答网站
</code></pre><hr>
<p>NodeJS 服务器搭建(NodeJS的软件安装)</p>
<pre><code>安装步骤:
  见 其它资料 &gt; node.msi安装Node截图

NodeJS服务器的搭建,就类似于我们安装Apache服务器

如何判断有没有安装成功:
  在cmd终端中输入 node -v 看有没有提示,如果有提示就说明
  安装成功了,如果没有,还需要做下一步

mac:https://brew.sh/index_zh-cn.html

使用nvm安装多个node版本并且进行切换:
  http://www.jianshu.com/p/07c3456e875a
</code></pre><hr>
<p>系统环境变量的配置</p>
<pre><code>目的:
  为了能在终端的任何一个目录下 启动 Node.exe,来执行我们的
  NodeJS的代码

环境变量有些类似于我们的桌面快捷方式

配置步骤:
  可以参考 其它资料 &gt; 环境变量设置(以QQ为例) 来配置
  Node.exe的环境变量,方便在终端的任何目录下启动Node.exe
  (REPL执行环境),来执行我们的NodeJS代码
</code></pre><hr>
<p>REPL执行环境的解释</p>
<pre><code>它就是我们NodeJS代码的运行环境



前提:
  我们的NodeJS的代码不是运行在浏览器中的,那他运行在哪里呢?

基本概念:
  1.REPL就是Node.exe 启动起来之后的运行环境

  2.REPL 可以理解成类似于`启动起来的`Apache服务器

  3.Node.exe(REPL)环境启动之后,就会执行放入它里面的
  NodeJS代码了,类似于启动Apache服务器之后就可以运行放入它
  里面的php代码了

  4.js代码放入到node.exe中就可以执行了

运行起来的 node.exe == REPL执行环境
</code></pre><hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习资源推荐&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;网站:国内NodeJS开发者社区：https://cnodejs.org/

书籍:《深入浅出Node.js》：作者：阿里巴巴.朴灵

阿里开源论坛:http://code.taobao.org/

360下面的:https://
    
    </summary>
    
    
      <category term="nodeJS" scheme="http://yoursite.com/tags/nodeJS/"/>
    
  </entry>
  
  <entry>
    <title>字符串的方法</title>
    <link href="http://yoursite.com/2015/03/13/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/13/字符串的方法/</id>
    <published>2015-03-13T11:34:19.000Z</published>
    <updated>2017-03-13T11:45:39.935Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>.charAt(索引);//返回的是该索引对应的字符串;</p>
</li>
<li><p>.charCodeAt(索引);//返回的是是这个索引对应的字符串的ASCII码值;</p>
</li>
<li><p>.concat(字符串1,字符串2…);返回的是拼接后的字符串;</p>
</li>
<li><p>.slice(开始的索引,结束的索引);</p>
</li>
<li><p>.slice(3,8);返回的是从索引为3的位置开始截取的字符串到索引为8的前一个结束(到7，包括7)</p>
</li>
<li><p>.substring(只写一个参数);从这个索引位置开始截取,一直到最后,获取新的字符串;</p>
</li>
<li><p>.substring(索引1,索引2);从索引1开始截取到索引2的前一个;</p>
</li>
<li><p>.substr(索引);返回的是从索引位置开始截取，一直到最后;</p>
</li>
<li><p>.substr(索引,长度);返回的是从索引位置开始截取，截取一定长度,得到新的字符串;</p>
</li>
<li><p>.indexOf(“要查找的字符串”);如果找到了则返回字符串的索引,否则返回-1;</p>
</li>
<li><p>.lastIndexOf(要找的字符串);从字符串的后面向前找,但是索引仍然是从左开始,从0开始,找到则返回对应的索引,找不到则返回-1;</p>
</li>
<li><p>.trim();清除字符串两边的空格;</p>
</li>
<li><p>.toLocaleLowerCase()把字符串转小写;</p>
</li>
<li><p>.toLocaleUpperCase()把字符串转大写;</p>
</li>
<li><p>.replace(“要替换的字符串”,”替换的字符串”);返回新的字符串;</p>
</li>
<li><p>.split(“要干掉的字符串内容”);返回的是字符串组合成的数组;</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;.charAt(索引);//返回的是该索引对应的字符串;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.charCodeAt(索引);//返回的是是这个索引对应的字符串的ASCII码值;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;.concat(字符串1,字符串2…);返回
    
    </summary>
    
    
      <category term="string" scheme="http://yoursite.com/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>angular-路由-详解</title>
    <link href="http://yoursite.com/2015/03/04/angular%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2015/03/04/angular详解/</id>
    <published>2015-03-04T02:26:07.000Z</published>
    <updated>2017-03-12T13:31:05.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ngRoute"><a href="#ngRoute" class="headerlink" title="ngRoute"></a>ngRoute</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>一：安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save angular-route</div></pre></td></tr></table></figure>
<p>二：引包</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"angular-route.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>三：加载依赖</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'app'</span>, [<span class="string">'ngRoute'</span>])</div></pre></td></tr></table></figure>
<p>四：配置路由</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'app'</span>, [<span class="string">'ngRoute'</span>])</div><div class="line">  .config([<span class="string">'$routeProvider'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">$routeProvider</span>) </span>&#123;</div><div class="line">    $routeProvider</div><div class="line">     .when(<span class="string">'/Book/:bookId'</span>, &#123;</div><div class="line">        <span class="attr">templateUrl</span>: <span class="string">'book.html'</span>,</div><div class="line">        <span class="attr">controller</span>: <span class="string">'BookController'</span>,</div><div class="line">      &#125;)</div><div class="line">      .when(<span class="string">'/Book/:bookId/ch/:chapterId'</span>, &#123;</div><div class="line">        <span class="attr">templateUrl</span>: <span class="string">'chapter.html'</span>,</div><div class="line">        <span class="attr">controller</span>: <span class="string">'ChapterController'</span></div><div class="line">      &#125;);</div><div class="line">  &#125;])</div></pre></td></tr></table></figure>
<p>五：在 HTML 中留坑</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- ng-view 指令就是用来配合路由使用的，路由会将匹配到的路由指定的 HTML 模板渲染到通过 ng-view 留坑的位置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-view</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="与路由相关的一些配套-API"><a href="#与路由相关的一些配套-API" class="headerlink" title="与路由相关的一些配套 API"></a>与路由相关的一些配套 API</h3><ul>
<li>ngView<ul>
<li>留坑，标记被路由替换处理的位置</li>
</ul>
</li>
<li>$routeProvider<ul>
<li>作用：配置路由表</li>
<li>根据不同的请求路径执行对应的控制器及渲染对应的HTML视图模板</li>
<li>when(path: String, route: Object)<ul>
<li>route<ul>
<li>controller</li>
<li>template</li>
<li>templateUrl</li>
<li>redirectTo</li>
</ul>
</li>
</ul>
</li>
<li>otherwise(params: Object | String)</li>
</ul>
</li>
<li>$route<ul>
<li>$route.reload() 重载当前路由</li>
<li>$route.updateParams(Object) 更新路由中的动态路径参数</li>
</ul>
</li>
<li>$routeParams<ul>
<li>用来获取路由参数</li>
<li>例如：/user/:id 是一个动态路径，则可以在控制器中通过 $routeParams 获取 :id 的值</li>
<li>也可以获取查询字符串中的参数，例如请求路径是 /user?id=1 则通过 $routeParams 也可以获取到</li>
</ul>
</li>
</ul>
<p>### </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ngRoute&quot;&gt;&lt;a href=&quot;#ngRoute&quot; class=&quot;headerlink&quot; title=&quot;ngRoute&quot;&gt;&lt;/a&gt;ngRoute&lt;/h2&gt;&lt;h3 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
      <category term="angular" scheme="http://yoursite.com/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2015/01/04/hello-world/"/>
    <id>http://yoursite.com/2015/01/04/hello-world/</id>
    <published>2015-01-04T02:26:07.000Z</published>
    <updated>2017-03-13T11:55:57.160Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="base" scheme="http://yoursite.com/tags/base/"/>
    
  </entry>
  
</feed>
